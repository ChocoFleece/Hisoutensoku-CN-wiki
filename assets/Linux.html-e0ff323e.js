import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,b as n,d as s,e,a as t}from"./app-ef9aff2b.js";const r={},l=n("p",null,"如果你看不懂这个标题，那么你应该不需要用到本篇内容。",-1),d=n("p",null,"本篇内容是关于如何在 GNU/Linux 使用 wine 运行非想天则及相关程序的。",-1),u=n("h1",{id:"安装-wine-并运行带-mod-的非想天则-包括新则",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装-wine-并运行带-mod-的非想天则-包括新则","aria-hidden":"true"},"#"),s(" 安装 Wine 并运行带 Mod 的非想天则（包括新则）")],-1),k=n("p",null,"Wine 是类 Unix 系统上运行 Windows 程序的兼容层。",-1),h={href:"https://wiki.winehq.org/Debian",target:"_blank",rel:"noopener noreferrer"},m={href:"https://wiki.winehq.org/Fedora",target:"_blank",rel:"noopener noreferrer"},v={href:"https://wiki.winehq.org/Ubuntu",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/lutris/lutris",target:"_blank",rel:"noopener noreferrer"},g=t(`<p>运行 <code>winecfg</code>，在函数库（<code>Libraries</code>）选项卡中添加 <code>d3d9.dll</code> 的配置，设为“原装先于内建”（native, builtin），之后在非想天则目录里运行 <code>wine th123.exe</code> 就可以打则了（在确认能够正常运行前请先在虚拟终端中运行，而非直接在文件管理器中点击运行，以便获取日志定位可能存在的问题）。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>若不使用 Mod，那么不需要进行上面这个设置。非想天则的 mod 是通过劫持 <code>d3d9.dll</code> 来加载的，因此需要配置 Wine 让它此时优先使用 mod 加载器的 <code>d3d9.dll</code>。亦可在环境变量 <code>WINEDLLOVERRIDES=d3d9=n,b</code> 下启动非想天则来做到这一点，反过来说当需要在同一路径下使用原版非想天则时，使用环境变量 <code>WINEDLLOVERRIDES=d3d9=b,n</code> 来运行即可。</p></div><p>此外，<strong>请务必启用 ChainCFix mod！</strong> 详见<a href="#%E8%95%BE%E7%B1%B3%E8%8E%89%E4%BA%9A-c-%E9%93%BE%E4%B8%8D%E5%90%8C%E6%AD%A5%E3%80%81c-%E9%93%BE%E5%8F%98%E6%88%90%E4%B8%8D%E6%AD%A3%E5%B8%B8%E7%9A%84%E7%9F%AD%E9%93%BE">下文</a>。</p><p>若使用中遇到问题可查询下面的文档，若下面文档也未涵盖或无法解决你的问题请向我们反馈。</p><h1 id="已知问题-有解决方案" tabindex="-1"><a class="header-anchor" href="#已知问题-有解决方案" aria-hidden="true">#</a> 已知问题（有解决方案）</h1><h2 id="游戏一般性问题" tabindex="-1"><a class="header-anchor" href="#游戏一般性问题" aria-hidden="true">#</a> 游戏一般性问题</h2><h3 id="运行带-mod-的非想天则时出现-0108-err-sync-rtlpwaitforcriticalsection-section-7bc6c3c0-dlls-ntdll-loader-c-的报错-标准错误输出-游戏无法启动" tabindex="-1"><a class="header-anchor" href="#运行带-mod-的非想天则时出现-0108-err-sync-rtlpwaitforcriticalsection-section-7bc6c3c0-dlls-ntdll-loader-c-的报错-标准错误输出-游戏无法启动" aria-hidden="true">#</a> 运行带 Mod 的非想天则时出现 <code>0108:err:sync:RtlpWaitForCriticalSection section 7BC6C3C0 &quot;dlls/ntdll/loader.c…</code> 的报错（标准错误输出），游戏无法启动</h3><p>完整报错为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0108:err:sync:RtlpWaitForCriticalSection section 7BC6C3C0 &quot;dlls/ntdll/loader.c: loader_section&quot; wait timed out in thread 0108, blocked by 0024, retrying (60 sec)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是 wine 的 bug，但在最新版中已经修复。若遇到这种情况，检查你的 wine 版本是不是在 8.1~8.8 范围内。若是，尝试换用稳定版或 WineQH 最新的测试版包。</p><h3 id="运行则的终端被-0160-fixme-d3d-wined3d-swapchain-present-ignoring-flags-0x1-刷屏" tabindex="-1"><a class="header-anchor" href="#运行则的终端被-0160-fixme-d3d-wined3d-swapchain-present-ignoring-flags-0x1-刷屏" aria-hidden="true">#</a> 运行则的终端被 <code>0160:fixme:d3d:wined3d_swapchain_present Ignoring flags 0x1.</code> 刷屏</h3><p>在环境变量 <code>WINEDEBUG=fixme-d3d</code> 下运行非想天则可以关闭这个警告的输出。</p><h3 id="打则时一些图像-比如机体、弹幕-变为白色矩形-终端被-01b8-err-d3d-resource-init-out-of-adapter-memory-刷屏" tabindex="-1"><a class="header-anchor" href="#打则时一些图像-比如机体、弹幕-变为白色矩形-终端被-01b8-err-d3d-resource-init-out-of-adapter-memory-刷屏" aria-hidden="true">#</a> 打则时一些图像（比如机体、弹幕）变为白色矩形，终端被 <code>01b8:err:d3d:resource_init Out of adapter memory.</code> 刷屏</h3><p>尤其发生在进入了大厅 mod 的 VS NETWORK 页面后；此外也可能在打街机模式或者故事模式的过程中出现。</p>`,14),w={href:"https://github.com/doitsujin/dxvk",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"set-video-memory.reg",-1),_=n("code",null,"wine regedit set-video-memory.reg",-1),E=t(`<div class="language-reg line-numbers-mode" data-ext="reg"><pre class="language-reg"><code>Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\\Software\\Wine\\Direct3D]
&quot;VideoMemorySize&quot;=&quot;1024&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="蕾米莉亚-c-链不同步、c-链变成不正常的短链" tabindex="-1"><a class="header-anchor" href="#蕾米莉亚-c-链不同步、c-链变成不正常的短链" aria-hidden="true">#</a> 蕾米莉亚 C 链不同步、C 链变成不正常的短链</h3><p>具体表现为：</p><ul><li>网络对战中使用若干次蕾米莉亚 C 链（不管是哪一方使用）后两方不同步</li><li>蕾米莉亚 C 链变为不正常的短链，攻击效果消失/改变</li></ul><p>源于非想天则的数组越界 bug，但在 Wine 中触发的概率远高于在 Windows 中触发的概率。务必启用 ChainCFix mod，该 mod 修复了这个问题。</p><p>若因为某些原因需要打无 Mod 的非想天则，那么请使用 <code>WINEDEBUG=trace+heap</code> 环境变量来启动非想天则，触发概率几乎变为 0（不确定是不是确实变为 0 了）。</p><h2 id="联机大厅相关" tabindex="-1"><a class="header-anchor" href="#联机大厅相关" aria-hidden="true">#</a> 联机大厅相关</h2><p>遇到问题可以对照以下表格更新大厅</p><table><thead><tr><th style="text-align:left;">大厅可能遇到的问题</th><th style="text-align:left;">首次修复问题的大厅mod版本</th></tr></thead><tbody><tr><td style="text-align:left;">Host 或使用 host list 时报 SSL 相关错误</td><td style="text-align:left;">0.6.4</td></tr><tr><td style="text-align:left;">大厅内无法用中文输入法聊天（Wine&gt;=8.8）</td><td style="text-align:left;">0.6.5</td></tr><tr><td style="text-align:left;">加入联机大厅时连接超时或长时间卡在 Joining</td><td style="text-align:left;">0.6.6.1</td></tr></tbody></table><p>（总而言之把大厅 mod 更新到 0.6.6.1 或以上的最新版就好）</p><p>在聊天框打字时若遇到光标与文字之间对不齐的问题（尤其文字中包含英文字母时），可使用 <code>FREETYPE_PROPERTIES=&quot;truetype:interpreter-version=35&quot;</code> 环境变量来运行，或使用低于 <code>7.17</code> 版本的 Wine。</p><p>若遇其他问题请向我们进行反馈。</p><h3 id="运行非想天则时弹出-dsound-相关错误" tabindex="-1"><a class="header-anchor" href="#运行非想天则时弹出-dsound-相关错误" aria-hidden="true">#</a> 运行非想天则时弹出 DSound 相关错误</h3>`,13),x={href:"https://wiki.archlinux.org/title/wine#Sound",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/lutris/docs/blob/master/WineDependencies.md",target:"_blank",rel:"noopener noreferrer"},W=t(`<h2 id="swarm-相关" tabindex="-1"><a class="header-anchor" href="#swarm-相关" aria-hidden="true">#</a> Swarm 相关</h2><h3 id="旧版-swarm-中服务器延迟显示为-1ms" tabindex="-1"><a class="header-anchor" href="#旧版-swarm-中服务器延迟显示为-1ms" aria-hidden="true">#</a> 旧版 Swarm 中服务器延迟显示为 -1ms</h3><p>这是由于缺失了 <code>CAP_NET_RAW</code> capability，wine 无法发送 ICMP 包。以下解决方式供参考：</p><p>找到 wine 的下列<strong>二进制可执行文件</strong>（不能是脚本）：<code>wine</code>、<code>wine64</code>（32 位系统无）、<code>wine-preloader</code>（如果有的话）、<code>wine64-preloader</code>（如果有的话）。它们可能在 <code>/usr/lib/wine/</code>（若使用 Debian/Ubuntu 维护的包）或者 <code>/opt/wine-*/bin</code>（若使用 WineHQ 的包）中。</p><p>对它们执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> setcap <span class="token assign-left variable">cap_net_raw</span><span class="token operator">=</span>ei 文件路径
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将下列代码 <code>execl</code> 中的路径填上后，保存到 <code>start-swarm.c</code></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/capability.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	  <span class="token class-name">cap_t</span> caps <span class="token operator">=</span> <span class="token function">cap_get_proc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token class-name">cap_value_t</span> newcaps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> CAP_NET_RAW<span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
	  <span class="token function">cap_set_flag</span><span class="token punctuation">(</span>caps<span class="token punctuation">,</span> CAP_INHERITABLE<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> newcaps<span class="token punctuation">,</span> CAP_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token function">cap_set_proc</span><span class="token punctuation">(</span>caps<span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Capabilities: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">cap_to_text</span><span class="token punctuation">(</span>caps<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token function">execl</span><span class="token punctuation">(</span><span class="token string">&quot;wine二进制可执行文件路径&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wine二进制可执行文件路径&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Swarm的路径&quot;</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行以下命令来编译（需要 gcc 和 libcap，Debian/Ubuntu 可安装 <code>gcc</code>、<code>libcap-dev</code>）以及设置 capability：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gcc start-swarm.c <span class="token parameter variable">-o</span> start-swarm <span class="token parameter variable">-lcap</span>
<span class="token function">sudo</span> setcap <span class="token assign-left variable">cap_net_raw</span><span class="token operator">=</span>p start-swarm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用旧版 Swarm，之后就可以用 <code>./start-swarm</code> 就可以启动 Swarm 了，其中服务器延迟应该可以正常显示。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如果不在意权限最小化，能够接受所有 wine 运行的程序都有 <code>CAP_NET_RAW</code> capability，可对上面提到的 wine 的二进制可执行文件使用 <code>setcap cap_net_raw=ep 文件路径</code> 来设置它们的 capability，而无须使用 start-swarm 作为赋予 capability 的 wrapper。</p></div><h3 id="新版-swarm-中服务器延迟显示为-0ms" tabindex="-1"><a class="header-anchor" href="#新版-swarm-中服务器延迟显示为-0ms" aria-hidden="true">#</a> 新版 Swarm 中服务器延迟显示为 0ms</h3><p>先进行<a href="#%E6%97%A7%E7%89%88-swarm-%E4%B8%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BB%B6%E8%BF%9F%E6%98%BE%E7%A4%BA%E4%B8%BA-1ms">上一节“旧版 Swarm 中服务器延迟显示为 -1ms”中的操作</a>，再在此基础上进行以下操作（替换 <code>C:\\windows\\system32\\ping.exe</code>）：</p><p>将下列代码保存到 <code>ping-wrapper.c</code></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> cmd<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;ping-bak&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>argc<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;-4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">strcat</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">strcat</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> argv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	FILE<span class="token operator">*</span> fp <span class="token operator">=</span> <span class="token function">popen</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">setbuf</span><span class="token punctuation">(</span>fp<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> line<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token function">fgets</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">,</span> fp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strncmp</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;Ping statistics for &quot;</span> <span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token function">strcpy</span><span class="token punctuation">(</span>line <span class="token operator">+</span> <span class="token function">strlen</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;:\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行下面的命令备份 wine 的 ping 命令并编译 ping-wrapper（需要 <code>i686-w64-mingw32-gcc</code> 命令，Debian/Ubuntu 可用 <code>gcc-mingw-w64-i686</code> 包，Fedora 可用 <code>mingw32-gcc</code> 包）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">SYSTEM32</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${WINEPREFIX<span class="token operator">:-</span>$HOME<span class="token operator">/</span>.wine}</span>/dosdevices/c:/windows/system32/&quot;</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token variable">$SYSTEM32</span>&quot;</span>/ping-bak.exe <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token function">mv</span> <span class="token string">&quot;<span class="token variable">$SYSTEM32</span>&quot;</span>/ping<span class="token punctuation">{</span>,-bak<span class="token punctuation">}</span>.exe <span class="token operator">&amp;&amp;</span>
i686-w64-mingw32-gcc ping-wrapper.c <span class="token parameter variable">-o</span> <span class="token string">&quot;<span class="token variable">\${WINEPREFIX<span class="token operator">:-</span>$HOME<span class="token operator">/</span>.wine}</span>/dosdevices/c:/windows/system32/ping.exe&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行 <code>winecfg</code>，在在函数库（<code>Libraries</code>）选项卡中添加 <code>ping.exe</code> 的配置，设为“原装先于内建”（native, builtin）。</p><p>之后就可以运行 <code>./start-swarm</code> 来启动新版 Swarm 了。</p><div class="hint-container info"><p class="hint-container-title">一些技术细节</p><p>新版 Swarm 通过 <code>C:\\windows\\system32\\ping.exe -4 -w 5000 -n 1 -l 32 服务器ip地址</code> 来测量本机和服务器之间的延迟。Windows 自带的 <code>ping.exe</code> 支持 ipv6，可以通过 <code>-4</code>、<code>-6</code> 来指定使用的 ip 协议，但 Wine 的 <code>ping.exe</code></p><ul><li>既不支持 ipv6，也不支持 <code>-4</code>、<code>-6</code> 开关</li><li>输出格式和 Windows 有差异，使得 Swarm 没法从输出中解析出延时数据</li></ul></div><h3 id="旧版swarm-端点管理-中无内容显示" tabindex="-1"><a class="header-anchor" href="#旧版swarm-端点管理-中无内容显示" aria-hidden="true">#</a> 旧版Swarm“端点管理”中无内容显示</h3><p>新版 Swarm 的类似问题暂时无解决方案。</p><p>对于旧版 Swarm，尝试使用 WineHQ 维护的包<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>。</p><h3 id="新版-swarm-在-windows-版本小于-windows-7-的设置下无法获取服务器列表" tabindex="-1"><a class="header-anchor" href="#新版-swarm-在-windows-版本小于-windows-7-的设置下无法获取服务器列表" aria-hidden="true">#</a> 新版 Swarm 在 Windows 版本小于 Windows 7 的设置下无法获取服务器列表</h3><p>将下面注册表配置保存为 <code>set-swarm-win7.reg</code>，运行 <code>wine regedit set-swarm-win7.reg</code></p><div class="language-reg line-numbers-mode" data-ext="reg"><pre class="language-reg"><code>Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\\Software\\Wine\\AppDefaults\\swarm-core-win7-x86.exe]
&quot;Version&quot;=&quot;win7&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="已知问题-暂无解决方案" tabindex="-1"><a class="header-anchor" href="#已知问题-暂无解决方案" aria-hidden="true">#</a> 已知问题（暂无解决方案）</h1><h2 id="新版-swarm-端点管理中无内容显示" tabindex="-1"><a class="header-anchor" href="#新版-swarm-端点管理中无内容显示" aria-hidden="true">#</a> 新版 Swarm 端点管理中无内容显示</h2><p>新版 Swarm 使用 IE 的 webview 来实现端点管理的显示。安装 IE8（Wine 目前能运行的最新 IE），系统配置为 WinXP 之后能够显示出初始界面，但由于 js 出错界面不再变动。</p>`,30),q={href:"https://learn.microsoft.com/en-us/windows/win32/direct3darticles/directx-warp",target:"_blank",rel:"noopener noreferrer"},S=n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote2"},"[2]"),n("a",{class:"footnote-anchor",id:"footnote-ref2"})],-1),C=n("hr",{class:"footnotes-sep"},null,-1),D={class:"footnotes"},A={class:"footnotes-list"},B=n("li",{id:"footnote1",class:"footnote-item"},[n("p",null,[s("Debian 在笔者的测试中，Debian 维护的 Wine 软件包有此问题，而 WineHQ 相同版本的包却没有。原因未知。 "),n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎")])],-1),R={id:"footnote2",class:"footnote-item"},I={href:"https://github.com/doitsujin/dxvk",target:"_blank",rel:"noopener noreferrer"},L=n("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1);function N(U,F){const a=p("ExternalLinkIcon");return i(),c("div",null,[l,d,u,k,n("p",null,[s("以 Debian、Fedora、Ubuntu 为例，你可以安装发行版维护的 Wine 包，也可以安装 WineHQ 提供的包（"),n("a",h,[s("Debian"),e(a)]),s("、"),n("a",m,[s("Fedora"),e(a)]),s("、"),n("a",v,[s("Ubuntu"),e(a)]),s("），也可以使用 "),n("a",b,[s("Lutris"),e(a)]),s(" 提供的经过了优化的 Wine 包。")]),g,n("p",null,[s("使用 "),n("a",w,[s("dxvk"),e(a)]),s("，或将下面的注册表配置保存为 "),f,s(" 并运行 "),_]),E,n("p",null,[s("可能是由于 Wine 缺少音频库的依赖。可尝试根据 "),n("a",x,[s("Wine 的 ArchWiki 页面"),e(a)]),s("或 "),n("a",y,[s("Lutris 给出的 Wine 依赖"),e(a)]),s("补齐依赖。")]),W,n("p",null,[s("笔者又尝试安装 IE9，发现 IE9 的 webview 疑似因为 Wine 缺少 "),n("a",q,[s("WARP"),e(a)]),s(" 支持而无法显示"),S,s("，但通过将新版 Swarm 中引用的 js 地址替换为本地自行搭建的服务器，可以观察到网页中的 js 确实被加载了。")]),C,n("section",D,[n("ol",A,[B,n("li",R,[n("p",null,[s("目前 Wine 上的 DirectX 实现（WineD3D 及 "),n("a",I,[s("DXVK"),e(a)]),s("）均没有实现 WARP。 "),L])])])])])}const V=o(r,[["render",N],["__file","Linux.html.vue"]]);export{V as default};
